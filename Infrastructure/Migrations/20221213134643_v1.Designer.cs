// <auto-generated />
using System;
using Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221213134643_v1")]
    partial class v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6188f9bc-2272-4c3e-8d9c-2b873023f021"),
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            Name = "Refined Wooden Gloves",
                            Price = "48.02"
                        },
                        new
                        {
                            Id = new Guid("13429971-f593-4e64-8149-ea255227121c"),
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            Name = "Awesome Granite Shoes",
                            Price = "959.40"
                        },
                        new
                        {
                            Id = new Guid("faaf562a-2e87-47cd-8750-25ccaf02190a"),
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            Name = "Practical Cotton Ball",
                            Price = "102.89"
                        },
                        new
                        {
                            Id = new Guid("16b9fb13-8371-4464-90a5-c056e294f5f9"),
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            Name = "Handmade Metal Pants",
                            Price = "234.30"
                        },
                        new
                        {
                            Id = new Guid("cef93130-c301-40d8-970b-8917978c717a"),
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            Name = "Handmade Metal Chicken",
                            Price = "407.42"
                        },
                        new
                        {
                            Id = new Guid("5d37a9e4-65db-48f5-8d7d-37d6f4e52f38"),
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            Name = "Unbranded Soft Chicken",
                            Price = "401.46"
                        },
                        new
                        {
                            Id = new Guid("10ab7474-ef2b-4f87-8d25-8d6bcec883f4"),
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            Name = "Incredible Steel Salad",
                            Price = "356.11"
                        },
                        new
                        {
                            Id = new Guid("d6eb08a8-e3ea-4508-aeb1-272c26c833d6"),
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            Name = "Licensed Cotton Tuna",
                            Price = "283.61"
                        },
                        new
                        {
                            Id = new Guid("b0873092-59b1-4964-8c42-091fae18e137"),
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            Name = "Generic Steel Bacon",
                            Price = "796.99"
                        },
                        new
                        {
                            Id = new Guid("18d35dc7-a708-4880-a52b-5a54f204f009"),
                            Description = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            Name = "Refined Wooden Keyboard",
                            Price = "765.46"
                        },
                        new
                        {
                            Id = new Guid("d32a58f8-ec69-4657-a898-dba0ec3656a5"),
                            Description = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            Name = "Sleek Granite Shirt",
                            Price = "240.78"
                        },
                        new
                        {
                            Id = new Guid("4f34667b-9cfb-43f7-bcf4-7460ddbe41e6"),
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            Name = "Rustic Granite Salad",
                            Price = "180.47"
                        },
                        new
                        {
                            Id = new Guid("46dcc3eb-14ed-4485-bd12-b18c7fb0c098"),
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            Name = "Practical Soft Ball",
                            Price = "317.37"
                        },
                        new
                        {
                            Id = new Guid("89884008-bdd6-4e8c-82fc-cccc6f0651e2"),
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            Name = "Small Soft Mouse",
                            Price = "723.44"
                        },
                        new
                        {
                            Id = new Guid("90a184ec-c8a3-4eef-9b26-36337193bf78"),
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            Name = "Ergonomic Steel Pizza",
                            Price = "46.86"
                        },
                        new
                        {
                            Id = new Guid("430cc64d-6620-4867-9071-9483e61673ab"),
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            Name = "Tasty Cotton Shirt",
                            Price = "882.88"
                        },
                        new
                        {
                            Id = new Guid("b46592f2-a6ed-4db7-8b27-bdbc0b54effc"),
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            Name = "Unbranded Cotton Keyboard",
                            Price = "174.50"
                        },
                        new
                        {
                            Id = new Guid("f0ecca87-3df4-4300-97fc-c45ad0636e99"),
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            Name = "Fantastic Concrete Hat",
                            Price = "611.12"
                        },
                        new
                        {
                            Id = new Guid("e06d2328-9ce5-4db9-8ba4-ad3e187f9f42"),
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            Name = "Refined Plastic Cheese",
                            Price = "300.25"
                        },
                        new
                        {
                            Id = new Guid("13bb51dc-b7c6-4d2c-9f5f-dc2ddbc61907"),
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            Name = "Handcrafted Cotton Car",
                            Price = "777.27"
                        },
                        new
                        {
                            Id = new Guid("766fd78f-2653-4943-9140-745c37bbc2b1"),
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            Name = "Refined Frozen Chair",
                            Price = "133.43"
                        },
                        new
                        {
                            Id = new Guid("058ff84d-6aec-4955-870a-f8bfc48696ba"),
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            Name = "Ergonomic Wooden Pants",
                            Price = "482.63"
                        },
                        new
                        {
                            Id = new Guid("ae0024e5-0bc8-40e5-b6c8-23dacd21a1c2"),
                            Description = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            Name = "Ergonomic Steel Soap",
                            Price = "501.10"
                        },
                        new
                        {
                            Id = new Guid("cac6bc16-bc9e-4b24-83d0-cff2b563a332"),
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            Name = "Fantastic Fresh Mouse",
                            Price = "136.80"
                        },
                        new
                        {
                            Id = new Guid("1699dd04-9ab2-4978-8fe5-863d75bb9bd4"),
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            Name = "Practical Cotton Ball",
                            Price = "56.77"
                        },
                        new
                        {
                            Id = new Guid("f846c7ba-da34-4605-bfab-1ed5bb62de34"),
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            Name = "Rustic Cotton Ball",
                            Price = "4.58"
                        },
                        new
                        {
                            Id = new Guid("de80089c-45ba-4a4f-aa28-1061f163629c"),
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            Name = "Licensed Granite Bacon",
                            Price = "389.31"
                        },
                        new
                        {
                            Id = new Guid("ee0dccb2-ed54-4192-99ae-5c98ac04c86f"),
                            Description = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            Name = "Rustic Concrete Bike",
                            Price = "776.30"
                        },
                        new
                        {
                            Id = new Guid("ebde45d6-2fe6-4ce7-bdde-1e55bd2e6c23"),
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            Name = "Sleek Metal Pants",
                            Price = "199.25"
                        },
                        new
                        {
                            Id = new Guid("9bc271a2-022f-4335-b2f7-9a52939337ea"),
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            Name = "Intelligent Cotton Hat",
                            Price = "149.16"
                        },
                        new
                        {
                            Id = new Guid("d1f8a0a3-a034-47e4-934b-203a14215448"),
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            Name = "Ergonomic Granite Fish",
                            Price = "477.28"
                        },
                        new
                        {
                            Id = new Guid("d89d8c15-f07b-49e2-b2a2-ae6faf252cfe"),
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            Name = "Incredible Cotton Pizza",
                            Price = "611.41"
                        },
                        new
                        {
                            Id = new Guid("c3d3259e-9680-40b7-a534-856923fe4987"),
                            Description = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            Name = "Small Steel Towels",
                            Price = "598.36"
                        },
                        new
                        {
                            Id = new Guid("af10177f-3c87-44a6-b644-7dd6f6b5a2e5"),
                            Description = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            Name = "Ergonomic Granite Chicken",
                            Price = "25.76"
                        },
                        new
                        {
                            Id = new Guid("c2b6163b-2c32-49f6-b079-714368fd6902"),
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            Name = "Rustic Steel Shoes",
                            Price = "942.14"
                        },
                        new
                        {
                            Id = new Guid("adcf013c-54e7-4472-89a4-6fc66113aafd"),
                            Description = "The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design",
                            Name = "Handcrafted Concrete Towels",
                            Price = "599.72"
                        },
                        new
                        {
                            Id = new Guid("4ad96fd9-4c0d-47e6-b86c-8b8639e41576"),
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            Name = "Sleek Cotton Cheese",
                            Price = "384.28"
                        },
                        new
                        {
                            Id = new Guid("c1c904c2-0bbf-43ef-bd7e-c123ebeddecd"),
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            Name = "Licensed Frozen Car",
                            Price = "861.20"
                        },
                        new
                        {
                            Id = new Guid("b3d342bb-9153-4744-a807-73c9fb6b6b39"),
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            Name = "Gorgeous Plastic Mouse",
                            Price = "630.13"
                        },
                        new
                        {
                            Id = new Guid("9cc7846b-a77a-4a19-8a86-e44f02506632"),
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            Name = "Generic Granite Car",
                            Price = "131.79"
                        },
                        new
                        {
                            Id = new Guid("ce6d0623-04bc-448f-bc1f-9e33b9541e15"),
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            Name = "Incredible Frozen Sausages",
                            Price = "798.42"
                        },
                        new
                        {
                            Id = new Guid("33e297a3-e7f2-4634-a4a0-e5aedc51e6e8"),
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            Name = "Fantastic Concrete Computer",
                            Price = "508.74"
                        },
                        new
                        {
                            Id = new Guid("2742ec91-658f-4a3c-a3fb-a42f89bbc630"),
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            Name = "Ergonomic Granite Tuna",
                            Price = "630.83"
                        },
                        new
                        {
                            Id = new Guid("c5375872-0682-4e2f-947d-ddc51343bb44"),
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            Name = "Tasty Rubber Hat",
                            Price = "929.91"
                        },
                        new
                        {
                            Id = new Guid("9e02bda5-bef0-43ca-ab30-3bef2639b5ae"),
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            Name = "Awesome Granite Shoes",
                            Price = "436.55"
                        },
                        new
                        {
                            Id = new Guid("cfff3d59-85e0-46bd-a7f9-68284f805f0e"),
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            Name = "Unbranded Concrete Tuna",
                            Price = "811.53"
                        },
                        new
                        {
                            Id = new Guid("f59f135f-554a-4229-9066-a452185f2a60"),
                            Description = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            Name = "Sleek Cotton Keyboard",
                            Price = "335.36"
                        },
                        new
                        {
                            Id = new Guid("0f919c4f-b5d0-45f8-af04-6dea00d9772c"),
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            Name = "Licensed Steel Shirt",
                            Price = "443.20"
                        },
                        new
                        {
                            Id = new Guid("59916e70-f767-437e-bc34-16e33478d917"),
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            Name = "Unbranded Rubber Pants",
                            Price = "625.52"
                        },
                        new
                        {
                            Id = new Guid("25000a06-9ab0-4e38-8e71-3904544e12e5"),
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            Name = "Intelligent Steel Car",
                            Price = "693.63"
                        },
                        new
                        {
                            Id = new Guid("d9cb28fa-328c-4fda-82f6-ce4f6a2507fa"),
                            Description = "The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design",
                            Name = "Rustic Frozen Table",
                            Price = "739.69"
                        },
                        new
                        {
                            Id = new Guid("e34ed00f-6c47-4adc-af70-bb67b43414b9"),
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            Name = "Handmade Granite Mouse",
                            Price = "76.65"
                        },
                        new
                        {
                            Id = new Guid("b053fabd-45a0-4880-b549-f6660e7811a0"),
                            Description = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            Name = "Tasty Metal Salad",
                            Price = "296.37"
                        });
                });

            modelBuilder.Entity("Domain.Models.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("JwtId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1dfa8ea5-00bd-4c51-80e6-33c5939eb0c0",
                            Name = "AppUser",
                            NormalizedName = "APPUSER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "f0971359-f0b4-443f-868d-db53019702ed",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8d6efe62-c5ad-4a36-a083-b35f1d14b55e",
                            Email = "Steven80@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "Steven80@hotmail.com",
                            NormalizedUserName = "Steven.Hand6",
                            PasswordHash = "AQAAAAIAAYagAAAAEA/qG18z4qxXQBPrcH7tAraXqpKRRJzptiHwfnXqWq6W4uc9D1cy+zKWozooCFuJsw==",
                            PhoneNumber = "640-835-7710 x169",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "beb2a436-109d-4ebe-9845-e4609a1cbe44",
                            TwoFactorEnabled = false,
                            UserName = "Steven.Hand6"
                        },
                        new
                        {
                            Id = "26069a3a-3166-4171-a5c3-e08b08a5304e",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8bb2b67b-bab1-4e73-980c-b9aed5c9d003",
                            Email = "Micheal.Cummerata@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "Micheal.Cummerata@gmail.com",
                            NormalizedUserName = "Micheal56",
                            PasswordHash = "AQAAAAIAAYagAAAAEG3owmf9lMz/cu9XC0QwK4hBT4EW6hcNEJTS6NYDbEBldZi8h5CvYbbiUNxMaltbJA==",
                            PhoneNumber = "479.657.7580 x81811",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8e0209b4-45fd-45f3-bf4b-123e328d051a",
                            TwoFactorEnabled = false,
                            UserName = "Micheal56"
                        },
                        new
                        {
                            Id = "4b18f5a2-b91b-41c8-8185-1b1f308bdc70",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "62361c0a-3faf-4160-97d2-458e703fe5aa",
                            Email = "Angel27@hotmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "Angel27@hotmail.com",
                            NormalizedUserName = "Angel.Mohr",
                            PasswordHash = "AQAAAAIAAYagAAAAEBEwJb7ssh2TSeYYdGFa7iXb2CBZEIoINsmpd4q2J6cUBZDE8ZcD8Q4SLZcD5OnHVA==",
                            PhoneNumber = "1-862-286-9988",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7c8224e2-960b-4cb1-a633-ac6393e3af17",
                            TwoFactorEnabled = false,
                            UserName = "Angel.Mohr"
                        },
                        new
                        {
                            Id = "313ec344-9c75-414c-ada8-c97b011b4149",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "33d17488-a8ec-4584-bd63-c8a5387b21af",
                            Email = "Colleen.Hackett@yahoo.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "Colleen.Hackett@yahoo.com",
                            NormalizedUserName = "Colleen44",
                            PasswordHash = "AQAAAAIAAYagAAAAEO2wXZMgKC5mB8i4Ow/dnhvqcT52c6mt5Lhc79EfmPtNLLdDkj6oR+GNc4M+qFP/jA==",
                            PhoneNumber = "(618) 943-8185 x8472",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a9a8a8f5-9f09-4d5a-ba08-29aedad54a50",
                            TwoFactorEnabled = false,
                            UserName = "Colleen44"
                        },
                        new
                        {
                            Id = "3a340844-d9b8-4226-bdc6-a6912a670376",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "cc3548f6-beb4-412e-91d5-133b9e0f01c9",
                            Email = "Nathan80@hotmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "Nathan80@hotmail.com",
                            NormalizedUserName = "Nathan_Hoppe37",
                            PasswordHash = "AQAAAAIAAYagAAAAEMM1LgzG3ohPIZ/zHa1iadVitsSMaDYrEGSwlWuyP0f8qRFwY2ahQWWpBP0LBMeTzQ==",
                            PhoneNumber = "1-583-537-6781",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "920d9aa1-1952-4e45-a2b8-5e4d3304b984",
                            TwoFactorEnabled = false,
                            UserName = "Nathan_Hoppe37"
                        },
                        new
                        {
                            Id = "ca23dad8-3332-404c-8c90-c55612f28c06",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "096116e6-627f-441d-a37d-56549dddddef",
                            Email = "Eileen_Cartwright56@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "Eileen_Cartwright56@gmail.com",
                            NormalizedUserName = "Eileen.Cartwright",
                            PasswordHash = "AQAAAAIAAYagAAAAECfGGK2KssEmPTznPU6tVcQSo21W0jBn8EnbSQImILqMmH+omOZEnafEnqpeklkpqg==",
                            PhoneNumber = "210.545.1298 x63459",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "86a0dfda-ce4d-4e8a-a77a-5b03c4d558e5",
                            TwoFactorEnabled = false,
                            UserName = "Eileen.Cartwright"
                        },
                        new
                        {
                            Id = "7f5122a7-b6d5-4cf8-82aa-479909361b9f",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ee304598-8a54-41d9-81f6-2339fdb1e6ea",
                            Email = "Kirk.Christiansen@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "Kirk.Christiansen@yahoo.com",
                            NormalizedUserName = "Kirk_Christiansen",
                            PasswordHash = "AQAAAAIAAYagAAAAENAgViDchb7n/9fdQHX3fzZkVEmOci3JFmS7VkJs+rRoN6nhE0jdqAn4h22CAHZVyw==",
                            PhoneNumber = "711-919-3645 x99335",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "de43082c-ceed-4f4b-8a0c-14f2468b7601",
                            TwoFactorEnabled = false,
                            UserName = "Kirk_Christiansen"
                        },
                        new
                        {
                            Id = "7dcd769e-e801-4102-874e-82af2ea8b135",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "07556dc3-e947-466a-ad8e-58d9053eb14e",
                            Email = "Clay.Sawayn35@yahoo.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "Clay.Sawayn35@yahoo.com",
                            NormalizedUserName = "Clay.Sawayn43",
                            PasswordHash = "AQAAAAIAAYagAAAAEMlNckoAA8cz+e9PjyWvBFzwtZ08TzN8427chc+4dRi0uE35mFBQZebC0aj7/ndB7g==",
                            PhoneNumber = "1-489-617-9649",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5d1d28df-e0b5-4ae2-a509-c5d189d4fdf5",
                            TwoFactorEnabled = false,
                            UserName = "Clay.Sawayn43"
                        },
                        new
                        {
                            Id = "64e1ec7f-7a53-4485-8747-8ec2425fa96a",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2c8531a5-4c8d-41c3-8c6c-a99d4a2b784c",
                            Email = "Santos_Wiza16@hotmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "Santos_Wiza16@hotmail.com",
                            NormalizedUserName = "Santos_Wiza46",
                            PasswordHash = "AQAAAAIAAYagAAAAEEle8vD8Ktipw3GPwLus/EXbJMsWCSVXkxqaneyZbuGHESF1T++thHWaCHeWK5on9g==",
                            PhoneNumber = "291.451.7769 x3991",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "64a65d1c-8589-4415-91c0-8b910af30a43",
                            TwoFactorEnabled = false,
                            UserName = "Santos_Wiza46"
                        },
                        new
                        {
                            Id = "9c2acf9a-e247-448b-b861-4935f39585a7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "fb5075dc-c09c-4a4e-947f-9d0e52e8a118",
                            Email = "Antoinette.Ebert17@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "Antoinette.Ebert17@hotmail.com",
                            NormalizedUserName = "Antoinette.Ebert89",
                            PasswordHash = "AQAAAAIAAYagAAAAEHixVSIjFzaGS01fQ5+KQh59yd55J82J0jTc2zYUOBRinwgwFZ0kUFLVgGPWXTBnAg==",
                            PhoneNumber = "(380) 919-2589 x3994",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "84aca733-5b9d-4c23-a2a3-6599f749551e",
                            TwoFactorEnabled = false,
                            UserName = "Antoinette.Ebert89"
                        },
                        new
                        {
                            Id = "697d8864-b38b-4042-b28e-d481291a6191",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a3122455-b82c-4382-bc88-00780a967a6b",
                            Email = "Brandon.Borer89@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "Brandon.Borer89@hotmail.com",
                            NormalizedUserName = "Brandon2",
                            PasswordHash = "AQAAAAIAAYagAAAAEBppVLNxIm+hRNB+AnDNxViuH26MmErL4H3+1Vorsffdvr8kiyOxqMYAoeaBT1+cGA==",
                            PhoneNumber = "(741) 876-0206 x4709",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d8c0cff8-5ad4-4fb4-bcf1-fe72192a4e44",
                            TwoFactorEnabled = false,
                            UserName = "Brandon2"
                        },
                        new
                        {
                            Id = "88a099b8-2372-4081-9c45-663e8e7734c0",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e1398205-0f0d-435a-b815-54492ac71655",
                            Email = "Charles87@hotmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "Charles87@hotmail.com",
                            NormalizedUserName = "Charles86",
                            PasswordHash = "AQAAAAIAAYagAAAAELbRItMpZlo82jQslsNt7KYaoI1rNRYXTutRvB6iqGdhUlPbcVO2dBxyaA0e0F9yfA==",
                            PhoneNumber = "(757) 912-4921 x228",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9474d9ed-9592-4574-b32c-8e39cce72eec",
                            TwoFactorEnabled = false,
                            UserName = "Charles86"
                        },
                        new
                        {
                            Id = "3325a78e-0999-4105-b70c-b3212b79e5c0",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "417772d3-a958-4f3e-ac95-444bcf946468",
                            Email = "Fernando.Davis@hotmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "Fernando.Davis@hotmail.com",
                            NormalizedUserName = "Fernando_Davis",
                            PasswordHash = "AQAAAAIAAYagAAAAEChozT8yu9N8rrZE9HoqTwF3cC+cpiK86/LwrTu7l3nZiaU932btGYF9bGtkjcfoew==",
                            PhoneNumber = "713-431-9697 x75550",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b71a4935-7418-4d05-a024-8b8da6149f76",
                            TwoFactorEnabled = false,
                            UserName = "Fernando_Davis"
                        },
                        new
                        {
                            Id = "80ecb32d-82f1-4e04-aaa5-adf65be98b38",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "fc817d57-74c2-4e62-abf4-fea3bd9e4ab6",
                            Email = "Ida14@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "Ida14@yahoo.com",
                            NormalizedUserName = "Ida.Heller88",
                            PasswordHash = "AQAAAAIAAYagAAAAEHqqbef27bP2NUSRb3IRvAcbndBs3xFhs4phHqjuHO7ts2JWk1Wz2QgUUhk8kJ6cNA==",
                            PhoneNumber = "469-853-7045",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "69c50aef-c201-42ec-9fc6-cbbc4bb5421e",
                            TwoFactorEnabled = false,
                            UserName = "Ida.Heller88"
                        },
                        new
                        {
                            Id = "6a19c4f4-7c63-4b21-8775-b93576d17385",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6fddd754-57e1-4507-8a3b-40a123106e74",
                            Email = "Shaun19@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "Shaun19@hotmail.com",
                            NormalizedUserName = "Shaun.Mitchell",
                            PasswordHash = "AQAAAAIAAYagAAAAEOdgNhYBW9NbuQS9cTM2Sy32mbOGmfS2pHkpykYFmqHZEx8pfOEeKhm7MLjspJ2mqg==",
                            PhoneNumber = "716.964.0007 x11857",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2672b18b-22e0-4c8d-abe0-d442708492cb",
                            TwoFactorEnabled = false,
                            UserName = "Shaun.Mitchell"
                        },
                        new
                        {
                            Id = "6cbd9239-ab04-43b8-8f5d-95fe8c7d6d79",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "dd02a375-9a0a-46c9-911b-a2c389f0df58",
                            Email = "Spencer_Hackett@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "Spencer_Hackett@gmail.com",
                            NormalizedUserName = "Spencer63",
                            PasswordHash = "AQAAAAIAAYagAAAAEIjzogi++bJmtsqO9fL3ygtQUCDM8eH091MESo+FXsnIKY52hT1A13CuiCYdKgOWfg==",
                            PhoneNumber = "386.317.4861",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e86a61ee-1604-44ee-bbee-a4e39d365e03",
                            TwoFactorEnabled = false,
                            UserName = "Spencer63"
                        },
                        new
                        {
                            Id = "46e06c94-d410-45c2-9638-5b4b507a8a8b",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8169ae41-df35-49eb-9ae3-cb62136f62c9",
                            Email = "Ruben38@hotmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "Ruben38@hotmail.com",
                            NormalizedUserName = "Ruben71",
                            PasswordHash = "AQAAAAIAAYagAAAAEAnggjluGGvxEhUz2ed27e7T7m1DFcK6O6tIFAQcQvCcJABxmSChORvMUq6ToeLCCQ==",
                            PhoneNumber = "965-648-9529 x7627",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b80ff3e8-fad5-49d4-a47a-2791513a5045",
                            TwoFactorEnabled = false,
                            UserName = "Ruben71"
                        },
                        new
                        {
                            Id = "69f59aa0-83d7-4a7c-ba65-482a7fad2dfa",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2397461b-e1bc-4b4d-aae0-8c584964d8fa",
                            Email = "Wanda.Shanahan@hotmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "Wanda.Shanahan@hotmail.com",
                            NormalizedUserName = "Wanda_Shanahan",
                            PasswordHash = "AQAAAAIAAYagAAAAEKU70zdpaiNw7f1gSSsfAS3OrdWl+HJYMF1tL2dyjQvDRVFi1U606HqSOg+nPCbaPw==",
                            PhoneNumber = "416-949-2849 x6562",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "38b6e65e-4c55-4859-9c9e-9dac89d885c1",
                            TwoFactorEnabled = false,
                            UserName = "Wanda_Shanahan"
                        },
                        new
                        {
                            Id = "a256b35e-315e-4aaf-be9e-abb6149f7b9d",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7c27ee56-7549-4e2b-92ad-26ee08bff969",
                            Email = "Renee_Schmidt24@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "Renee_Schmidt24@gmail.com",
                            NormalizedUserName = "Renee.Schmidt",
                            PasswordHash = "AQAAAAIAAYagAAAAEAlNHzCaicZXiWFlLDLJFOCeWW6MHsKAxU8Vob5r67vGyKm3HU1O3Ln8Y5ypYvINsQ==",
                            PhoneNumber = "1-490-744-0669 x74142",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "18357c6e-c903-47ae-b2b8-4d2fb412d7bf",
                            TwoFactorEnabled = false,
                            UserName = "Renee.Schmidt"
                        },
                        new
                        {
                            Id = "2cea71fe-a558-4469-8b1e-2220283f73e3",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "61752d5c-c652-4ed5-ab7c-aa4b42a358c8",
                            Email = "Perry.Swift@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "Perry.Swift@gmail.com",
                            NormalizedUserName = "Perry_Swift",
                            PasswordHash = "AQAAAAIAAYagAAAAEBQ3yklru7RPX0NuW8yXzyVrtKFFlEaZUpkii6ZLtsIBfKqHP9vf1At9VbJOIHWjNQ==",
                            PhoneNumber = "1-332-558-0541 x2418",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "eb19254b-a0e8-4436-bf20-090156f4cd9b",
                            TwoFactorEnabled = false,
                            UserName = "Perry_Swift"
                        },
                        new
                        {
                            Id = "3dc9cbd0-9de6-4eb4-b6d5-a3490d811b25",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7a2bd871-09ef-48be-b320-2af8f38f1e4e",
                            Email = "Dolores.Trantow@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "Dolores.Trantow@hotmail.com",
                            NormalizedUserName = "Dolores_Trantow",
                            PasswordHash = "AQAAAAIAAYagAAAAENiddveQIJg/BH6e1YezXFELQutqonHFQ8KcLquiHBtbtMo+Wvkjaqv39piGP3NrLA==",
                            PhoneNumber = "999.520.4637 x73295",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d826dd5e-163d-4895-8d9b-923622578f10",
                            TwoFactorEnabled = false,
                            UserName = "Dolores_Trantow"
                        },
                        new
                        {
                            Id = "ce638bdf-f926-4332-a4fa-36526269b046",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c60264f4-0447-4de3-9ebf-eb824c0e79ac",
                            Email = "Anthony.Larson@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "Anthony.Larson@gmail.com",
                            NormalizedUserName = "Anthony.Larson46",
                            PasswordHash = "AQAAAAIAAYagAAAAEAP6PK7n6D3dwz6IPXhUB0Ktd/vSIFiD8M/LXcRGeaoK8zcWcHGENrnaWxSszX56RQ==",
                            PhoneNumber = "599-875-8193",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "30c2edab-2e6e-45fc-acb7-9ccaa6acc614",
                            TwoFactorEnabled = false,
                            UserName = "Anthony.Larson46"
                        },
                        new
                        {
                            Id = "4ab00788-3a38-4b11-b05c-3555cd69ce69",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4511a0d6-ae30-4037-ab3e-0f349d08e433",
                            Email = "Vivian.Lockman86@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "Vivian.Lockman86@yahoo.com",
                            NormalizedUserName = "Vivian_Lockman",
                            PasswordHash = "AQAAAAIAAYagAAAAEBkEh7TlNlRC5ogkYj+wc4Jj7vpIiIyC1RR7lTJdjxcSUfVlRcDrBJUN8crogDllIg==",
                            PhoneNumber = "(928) 374-1151 x514",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a173cdb5-c827-437b-81c2-07195bb6f661",
                            TwoFactorEnabled = false,
                            UserName = "Vivian_Lockman"
                        },
                        new
                        {
                            Id = "39bfe2c5-3400-4449-9882-9073f01855c0",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ff4423eb-6c9c-4b60-8014-05ba56a9c123",
                            Email = "Evelyn.Rowe34@hotmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "Evelyn.Rowe34@hotmail.com",
                            NormalizedUserName = "Evelyn.Rowe38",
                            PasswordHash = "AQAAAAIAAYagAAAAEL5a44fWVeIxI1lWjt8zYojJLa+UHQ95fb2H1oexwis4MquQAqTEtcWgJRf5E4JWDQ==",
                            PhoneNumber = "1-616-284-4213 x62187",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4deb3fb2-43b5-43ea-a575-25d63843cd4b",
                            TwoFactorEnabled = false,
                            UserName = "Evelyn.Rowe38"
                        },
                        new
                        {
                            Id = "97f0db2f-7feb-40d0-aaa5-066bbe5b8e1c",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d9c9439b-2ec3-4eb1-894a-4704cf4855b0",
                            Email = "Salvatore.Cassin@hotmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "Salvatore.Cassin@hotmail.com",
                            NormalizedUserName = "Salvatore60",
                            PasswordHash = "AQAAAAIAAYagAAAAEDITUnmnCBWwci+PQ8aNLrjTV+HV+uf0IFJw3w/l3oNdd2BUNqd2jznAN7EZYy1flg==",
                            PhoneNumber = "(940) 723-3069 x47771",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b3f03daa-573f-4224-92d6-e2dab8a15238",
                            TwoFactorEnabled = false,
                            UserName = "Salvatore60"
                        },
                        new
                        {
                            Id = "372c5467-5c5e-43ba-ab8f-4b0c74dfdc26",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b79a876f-373b-4f7f-a547-b696bcb641c0",
                            Email = "Caleb72@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "Caleb72@gmail.com",
                            NormalizedUserName = "Caleb38",
                            PasswordHash = "AQAAAAIAAYagAAAAEP0yZ0/tPVGDHDXdr5tL6Jtup8eiZoIGsiUFjL5cyTGPCyj5wINRBQgtK3YJN8t3bQ==",
                            PhoneNumber = "313.668.4425 x435",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8edf2b75-a57f-499e-be9f-6d353b3b6306",
                            TwoFactorEnabled = false,
                            UserName = "Caleb38"
                        },
                        new
                        {
                            Id = "e61728ab-9772-4ef4-bcc6-0b9e21b9becd",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "38a8e8f6-5a8b-48f6-9cdf-34e517e50976",
                            Email = "Edwin.Bayer85@hotmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "Edwin.Bayer85@hotmail.com",
                            NormalizedUserName = "Edwin.Bayer",
                            PasswordHash = "AQAAAAIAAYagAAAAEIIvKu7xsVtr05xOVxCs3W/Wa6RAN7d3pf/H1IkrB+jJZmn1Bey6SY8qw63kkiiksg==",
                            PhoneNumber = "356-219-1601 x193",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c0d2e233-00c5-42ba-9eb9-edd52aa0b797",
                            TwoFactorEnabled = false,
                            UserName = "Edwin.Bayer"
                        },
                        new
                        {
                            Id = "c3d2b232-6caf-48e3-a7d3-1ffe773869f9",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1d6b7649-4814-4cf2-b696-83c7f8fb4aab",
                            Email = "Vicky75@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "Vicky75@gmail.com",
                            NormalizedUserName = "Vicky26",
                            PasswordHash = "AQAAAAIAAYagAAAAEOryBbq9VOGRzVwr1n2JgL6qtZXf3oLg3QFsbuyEXdE84zk2A1Pdq31MNzBY6hVQSA==",
                            PhoneNumber = "(587) 760-9891",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3f7dc446-26f9-4570-8ace-cfe799c0d993",
                            TwoFactorEnabled = false,
                            UserName = "Vicky26"
                        },
                        new
                        {
                            Id = "ad5368df-67cf-4a47-a1ae-a6eb809f43bf",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a8b91972-541e-4db6-8bc8-13eb8f98abd3",
                            Email = "Alexander.Koss5@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "Alexander.Koss5@yahoo.com",
                            NormalizedUserName = "Alexander_Koss",
                            PasswordHash = "AQAAAAIAAYagAAAAEBduXng8TC4mzhUpNAlrRGHqSJL0wWwFMWNek6stUrPcwESZlHOYVvHARgSr13rLbg==",
                            PhoneNumber = "(827) 951-2254 x612",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "043ba3b8-c1e9-48ab-9f2e-a0e0de5c3882",
                            TwoFactorEnabled = false,
                            UserName = "Alexander_Koss"
                        },
                        new
                        {
                            Id = "51076398-d361-47f0-9e60-5cdf3083dbd7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ee1ba4ca-9231-409e-bf0b-e95ab75e5261",
                            Email = "Roy98@yahoo.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "Roy98@yahoo.com",
                            NormalizedUserName = "Roy38",
                            PasswordHash = "AQAAAAIAAYagAAAAEF3MPFiA8KxmFPI+hhKsUaCNM9FXbGXx3vm9bR8zEPvtB/IqqWwd0dcGWY4jK7s5Tg==",
                            PhoneNumber = "417-724-5537 x7866",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "832454ca-0814-4cb8-a09e-2fbe48affe07",
                            TwoFactorEnabled = false,
                            UserName = "Roy38"
                        },
                        new
                        {
                            Id = "3908d316-226a-4529-90ab-81e8f10fd5f6",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f7c4ec75-c044-4ec5-ac61-9f8655b7605b",
                            Email = "Verna39@hotmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "Verna39@hotmail.com",
                            NormalizedUserName = "Verna_Hagenes",
                            PasswordHash = "AQAAAAIAAYagAAAAEM2dWXD9JzzngKAS/W7qmE8C8MkH+DkG2rF+DGgw2Onjibj/zymcBWoZbQ3mVjJoQA==",
                            PhoneNumber = "547.368.4928 x7530",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "44b89aaf-03b4-4590-a1a8-38ca4410fbdb",
                            TwoFactorEnabled = false,
                            UserName = "Verna_Hagenes"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Domain.Models.RefreshToken", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
